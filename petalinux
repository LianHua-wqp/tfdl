
source /opt/pkg/petalinux/2018.3/settings.sh
petalinux-create --type project --template zynq --name 文件名
petalinux-config --get-hw-description （hdf文件所在目录路径）
petalinux-config --get-hw-description ../Miz_sys.sdk

petalinux-config -c kernel
petalinux-config -c rootfs	
大家进入到petalinux工程中的目录project-spec/meta-user/recipes-bsp/device-tree/files 会发现有一个dtsi后缀的文件。这就是petalinux指定的设备树文件了。大家有什么设备树节点都可以添加到这里面去，它会被petalinux自动编译到设备树文件中去。新手可以不做配置，因为不配置设备树也可以启动内核，只是不能使用硬件设备而已


petalinux-build


BOOT.BIN 文件是 fsbl 镜像、 u-boot 镜像以及 pl 端 bit 文件集合在一起的。对于启动文件的介绍可以参考zynq启动分析。我们需要利用前面制作的文件来生成BOOT.BIN
petalinux-package --boot --fsbl --fpga --u-boot --force


生成的位置images/linux/目录下
进入工程目录images/linux下，将image.ub和BOOT.BIN拷贝到sd卡的fat32格式分区中

ifconfig eth0 192.168.4.121 netmask 255.255.255.0


/////////////////////////////////////////////////////////////////////////////////
//配置 go1.4 工作模块
tar -zxvf go1.4-bootstrap-20171003.tar.gz
export GOROOT_BOOTSTRAP=/home/fft-xue/wqp/go_work/go1.4
//配置mips的gcc交叉编译工作目录
export CC_FOR_TARGET=/opt/pkg/petalinux/2018.3/tools/linux-i386/gcc-arm-linux-gnueabi/bin/arm-linux-gnueabihf-gcc
export CXX_FOR_TARGET=/opt/pkg/petalinux/2018.3/tools/linux-i386/gcc-arm-linux-gnueabi/bin/arm-linux-gnueabihf-g++
export STAGING_DIR=//先不填

cd /home/fft-xue/wqp/go_work/go/src
GOOS=linux GOARCH=amd64 ./make.bash

//配置go1.11
tar -zxvf go1.11.src.tar.gz
cd /home/fft-xue/wqp/go_work/go/src
#注意修改make.bash中的路径！！！！！！！！！！！//export GOROOT_BOOTSTRAP=${GOROOT_BOOTSTRAP:-$HOME/go1.4}
# 开启CGO编译
CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=7 ./make.bash
# 关闭CGO编译
CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 ./make.bash


////////go1.11
export CC_FOR_TARGET=/opt/pkg/petalinux/2018.3/tools/linux-i386/gcc-arm-linux-gnueabi/bin/arm-linux-gnueabihf-gcc
export CXX_FOR_TARGET=/opt/pkg/petalinux/2018.3/tools/linux-i386/gcc-arm-linux-gnueabi/bin/arm-linux-gnueabihf-g++
export GOROOT=/home/fft-xue/wqp/go_work/go1.11
export GOBIN=$GOROOT/bin
export GOPATH=/home/fft-xue/wqp/gocode
export PATH=$PATH:$GOBIN:GOPATH/bin

CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build main.go	//import "./http"使用的是相对路径
///////////////////////////////////////////////////////




/////////////////////////////////go1.20暂时保存环境配置
export GOROOT=/home/fft-xue/gowork/go
export GOPATH=/home/fft-xue/gowork
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
export GOPROXY=https://goproxy.cn,direct
/////////////////////////////////永久保存配置环境
修改/etc/profile后要重启生效，
或者   .  /etc/profile	生效


// gcc -c hello.c
// ar -cr libhello.a hello.o

/opt/pkg/petalinux/2018.3/tools/linux-i386/gcc-arm-linux-gnueabi/bin/arm-linux-gnueabihf-gcc -c fly_uart.c
/opt/pkg/petalinux/2018.3/tools/linux-i386/gcc-arm-linux-gnueabi/bin/arm-linux-gnueabihf-ar -cr libfly_uart.a fly_uart.o
CGO_ENABLED=1 GOOS=linux GOARCH=arm CC=/opt/pkg/petalinux/2018.3/tools/linux-i386/gcc-arm-linux-gnueabi/bin/arm-linux-gnueabihf-gcc go build main.go
